from IPython.display import clear_output

def display_board(board):
    
    print("\n")
    print(board[1] + "|" + board[2] + "|" + board[3])
    print ("-----")
    print(board[4] + "|" + board[5] + "|" + board[6])
    print ("-----")
    print(board[7] + "|" + board[8] + "|" + board[9])
    
def place_marker(board, marker):
    
    if marker == "X":
        
        display_board(game_board)
        print("\nX, go.")
    
    elif marker == "O":
        
        print("\nO, go.")

    while True:
        
        while True:
        
            try:
        
                position = int(input("\nWhich location would you like to put your marker?\n"))
                break
    
            except:
            
                print("Please enter an integer from 1-9.")
        
        if position in range(1,10):
            
            if board[position] == " ":
            
                board[position] = marker
                display_board(board)
                break
            
            else:
                
                print("There is already a letter on that space.")
            
        else:
                
            print("Please enter an integer 1-9.")

 
 def win_check(board,mark):
  return ((board[7] == board[8] == board[9] == mark) or 
    (board[4] == board[5] == board[6] == mark) or 
    (board[1] == board[2] == board[3] == mark) or 
    (board[7] == board[4] == board[1] == mark) or 
    (board[8] == board[5] == board[2] == mark) or 
    (board[9] == board[6] == board[3] == mark) or 
    (board[7] == board[5] == board[3] == mark) or
    (board[9] == board[5] == board[1] == mark)) #double parenthesis so we can write in multiple lines, not one continuing line.
  
#Write a function that returns a boolean indicating whether a space on the board is freely available.
def space_check(board, num):
  return board[num] == ' '
 
 #step 7: Write a function that checks returns a boolean value. True if full, False otherwise.

def full_board_check(board):
    
    if all([space_check(board, num) for num in range(1,10)]):
        return False
    
    if (space_check(game_board, 1) or space_check(game_board, 2) or space_check(game_board, 3) 
        or space_check(game_board, 2) or space_check(game_board, 4) or space_check(game_board, 5) 
        or space_check(game_board, 6) or space_check(game_board, 7) or space_check(game_board, 8) 
        or space_check(game_board, 9)):
        return False
        
    return True
    #if False is not returned, then the board is full so True is returned.
  
  

print("Welcome to Tic Tac Toe!")

while True:
    
    clear_output()
    game_board = [" "] * 10
    print("Welcome to Tic Tac Toe!")

    while True:
        
        whos_first = input("\nPlayer 1, do you want to be X or O? X goes first.\n").upper()
      
        if whos_first == "X":
            
            print("X, O")
            break
            
        elif whos_first == "O":
            
            print("O, X")
            break
    
    while True:

        play_game = input("\nAre you two ready to play? Press 'Y' for Yes or 'N' for No.\n").upper()
        
        if play_game == "Y":
            
            game_on = True
            break
    
        elif play_game == "N":
            
            play_game 

        else:
            
            print("Please type in 'Y' or 'N'.")
            play_game
 
    while game_on:
        
        if full_board_check(game_board):
            print("\nLooks like this game is a tie!")
            break
    
        x_place_marker()
    
        if win_check(game_board, "X"):
            
            print("\nCongratulations, X! You have one the game!")
            break
    
        if full_board_check(game_board):
            
            print("Looks like the game is a tie!")
            break
  
        o_place_marker()
    
        if win_check(game_board, "O"):
            
            print("\nCongratulations O! You have one the game!\n")
            break
    
    
    while True:
        
        replay = input("Do you players want to play again? Press 'N' for No if you don't, or any other button to play again.").upper()
    
        if replay == "N":
        
            print("\nGoodbye!")
            break
        
        else:
            
            break
    
    if replay == "N":
        
        break
